# 构建 VitePress 站点并将其部署到 GitHub Pages 的示例工作流程
name: Deploy VitePress site to Pages

env:
  # 通过设置 BASE_URL 来覆盖默认值
  # BASE_URL: "/path/"  # 默认为 "/"

  # 若果使用 Algolia，请在 secrets 配置
  # APPLICATION_ID、SEARCH_API_KEY、WRITE_API_KEY、INDEX_NAME 和 START_URLS
  # 然后取消下面注释，并将 jobs 中 algolia 的步骤中的 if 的值设置为 true
  # SEARCH_PROVIDER: "algolia"  # 默认为 "local"
  APPLICATION_ID: ${{ secrets.APPLICATION_ID }}
  SEARCH_API_KEY: ${{ secrets.SEARCH_API_KEY }}
  INDEX_NAME: ${{ secrets.INDEX_NAME }}
  START_URLS: ${{ secrets.START_URLS }} # 用于爬取的页面，示例 ["https://example.com/", "..."]

on:
  # 在针对 `main` 分支的推送上运行。如果你
  # 使用 `master` 分支作为默认分支，请将其更改为 `master`
  push:
    # 默认不启用，需要时手动取消注释下面的行
    # branches: [main]

  # 允许你从 Actions 选项卡手动运行此工作流程
  workflow_dispatch:

# 设置 GITHUB_TOKEN 的权限，以允许部署到 GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# 只允许同时进行一次部署，跳过正在运行和最新队列之间的运行队列
# 但是，不要取消正在进行的运行，因为我们希望允许这些生产部署完成
concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  # 构建工作
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # 如果未启用 lastUpdated，则不需要
      - uses: pnpm/action-setup@v3 # 如果使用 pnpm，请取消此区域注释
        with:
          version: 9
      # - uses: oven-sh/setup-bun@v1 # 如果使用 Bun，请取消注释
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: pnpm # 或 pnpm / yarn
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Install dependencies
        run: pnpm install # 或 pnpm install / yarn install / bun install
      - name: Build with VitePress
        run: pnpm docs:build # 或 pnpm docs:build / yarn docs:build / bun run docs:build
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: .vitepress/dist

  # 部署工作
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    name: Deploy
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Algolia 搜索索引更新工作（默认不启用）
  algolia:
    runs-on: ubuntu-latest
    needs: deploy
    # 默认不启用，需要时删除下面的条件或将其设为 true
    if: false
    steps:
      - uses: actions/checkout@v4

      - name: Get the content of algolia.json as config
        id: algolia_config
        run: |
          # 读取原始 crawler.json 内容
          config=$(cat crawler.json | jq -r tostring)
          # 添加 index_name 和 start_urls
          config=$(echo $config | jq --arg index_name "${{ env.INDEX_NAME }}" --argjson start_urls "${{ env.START_URLS }}" '. + {index_name: $index_name, start_urls: $start_urls}')
          echo "config=$config" >> $GITHUB_OUTPUT
      

      - name: Push indices to Algolia
        uses: signcl/docsearch-scraper-action@master
        env:
          APPLICATION_ID: ${{ secrets.APPLICATION_ID }}
          API_KEY: ${{ secrets.WRITE_API_KEY }}
          CONFIG: ${{ steps.algolia_config.outputs.config }}
